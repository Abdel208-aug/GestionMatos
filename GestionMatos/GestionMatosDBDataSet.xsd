<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="GestionMatosDBDataSet" targetNamespace="http://tempuri.org/GestionMatosDBDataSet.xsd" xmlns:mstns="http://tempuri.org/GestionMatosDBDataSet.xsd" xmlns="http://tempuri.org/GestionMatosDBDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="GestionMatosDBCnx" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="GestionMatosDBCnx (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.GestionMatos.Properties.Settings.GlobalReference.Default.GestionMatosDBCnx" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MarqueTableAdapter" GeneratorDataComponentClassName="MarqueTableAdapter" Name="Marque" UserDataComponentName="MarqueTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GestionMatosDBCnx (Settings)" DbObjectName="GestionMatosDB.dbo.Marque" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Marque] WHERE (([idMrq] = @Original_idMrq) AND ([nomMrq] = @Original_nomMrq))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idMrq" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idMrq" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nomMrq" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nomMrq" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Marque] ([nomMrq]) VALUES (@nomMrq);
SELECT idMrq, nomMrq FROM Marque WHERE (idMrq = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nomMrq" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nomMrq" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idMrq, nomMrq FROM dbo.Marque</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Marque] SET [nomMrq] = @nomMrq WHERE (([idMrq] = @Original_idMrq) AND ([nomMrq] = @Original_nomMrq));
SELECT idMrq, nomMrq FROM Marque WHERE (idMrq = @idMrq)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nomMrq" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nomMrq" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idMrq" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idMrq" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nomMrq" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nomMrq" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idMrq" ColumnName="idMrq" DataSourceName="GestionMatosDB.dbo.Marque" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idMrq" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idMrq" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idMrq" DataSetColumn="idMrq" />
              <Mapping SourceColumn="nomMrq" DataSetColumn="nomMrq" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="GestionMatosDBDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="GestionMatosDBDataSet" msprop:Generator_UserDSName="GestionMatosDBDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Marque" msprop:Generator_TableClassName="MarqueDataTable" msprop:Generator_TableVarName="tableMarque" msprop:Generator_TablePropName="Marque" msprop:Generator_RowDeletingName="MarqueRowDeleting" msprop:Generator_RowChangingName="MarqueRowChanging" msprop:Generator_RowEvHandlerName="MarqueRowChangeEventHandler" msprop:Generator_RowDeletedName="MarqueRowDeleted" msprop:Generator_UserTableName="Marque" msprop:Generator_RowChangedName="MarqueRowChanged" msprop:Generator_RowEvArgName="MarqueRowChangeEvent" msprop:Generator_RowClassName="MarqueRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idMrq" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidMrq" msprop:Generator_ColumnPropNameInRow="idMrq" msprop:Generator_ColumnPropNameInTable="idMrqColumn" msprop:Generator_UserColumnName="idMrq" type="xs:int" />
              <xs:element name="nomMrq" msprop:Generator_ColumnVarNameInTable="columnnomMrq" msprop:Generator_ColumnPropNameInRow="nomMrq" msprop:Generator_ColumnPropNameInTable="nomMrqColumn" msprop:Generator_UserColumnName="nomMrq">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Marque" />
      <xs:field xpath="mstns:idMrq" />
    </xs:unique>
  </xs:element>
</xs:schema>